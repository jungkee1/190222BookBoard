<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!--namespcae 체크할것  -->
	
	<!-- 여기 추가할려면 pome.xml 에 추가하고 해야함  -->
	<!--  DB설정(hikariCP) -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
			<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
			<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
			<property name="username" value="spring"></property>
			<property name="password" value="spring"></property>
	</bean>
	
		<!-- HikariCp configuration  -->
		<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
			<constructor-arg ref="hikariConfig"/>
		</bean>
	
	<!--mybatis  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
	</bean>
		
			
			<!-- transaction :연이어진 작업이 성공적으로 되던지 실패하게되면 아예 롤백 시켜버리던지 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/> 
	
	<!-- root는 공통적인작업  servelt은 jsp 관련-->
	<mybatis-spring:scan base-package="org.zerock.mapper"></mybatis-spring:scan>
	
	<context:component-scan base-package="org.zerock.service" /> <!--  transaction 있는 곳을 root에 추가 해줘야 전체가 다 알아먹음 appServlet에 하면 안된다 -->
	<!-- root는 전체적인것, 항상 먼저 띄워놓는걸로, appServlet은 그 페이지가 딱 실행 될떄 동작 하는 느낌으로  -->
	
		
</beans>
